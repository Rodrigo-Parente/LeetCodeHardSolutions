public class Solution {
    public int Trap(int[] heights) {
        int total = 0;
        int n = heights.Length;
        if(n==0) {return 0;}

        int[] leftMax = new int[n];
        int[] rightMax = new int[n];

        leftMax[0] = heights[0];
        for(int i=1; i < n; i++) {
            leftMax[i] = Math.Max(leftMax[i-1], heights[i]);
            continue;
        } 

        rightMax[n-1] = heights[n-1];
        for(int i=n-2; i >= 0; i--) {
            rightMax[i] = Math.Max(rightMax[i+1], heights[i]);
            continue;
        }

        for(int i=1; i < n-1; i++) {
            int min = Math.Min(leftMax[i-1], rightMax[i+1]) - heights[i];
            total += Math.Max(min, 0);
        }
        
        return total;
    }
}
