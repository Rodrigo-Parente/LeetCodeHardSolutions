/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int val=0, ListNode next=null) {
 *         this.val = val;
 *         this.next = next;
 *     }
 * }
 */
public class Solution 
{
    public ListNode ReverseKGroup(ListNode head, int k) 
    {
        ListNode dummy = new ListNode(0, head);
        ListNode groupPrev = dummy;

        while(true)
        {
            ListNode last = GetKth(groupPrev, k);
            if(last == null) {return dummy.next;}
            ListNode groupNext = last.next;

            ListNode prev = last.next;
            ListNode cur = groupPrev.next;
            while(cur != groupNext)
            {
                ListNode next = cur.next;
                cur.next = prev;
                prev = cur;
                cur = next;
            }

            ListNode temp = groupPrev.next;
            groupPrev.next = last;
            groupPrev = temp;
        }
    }

    public ListNode GetKth(ListNode head, int k)
    {
        for(int i=0; i < k && head != null; i++)
        {
            head = head.next;
        }

        return head;
    }
}
